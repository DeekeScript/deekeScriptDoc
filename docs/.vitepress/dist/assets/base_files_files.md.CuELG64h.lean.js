import{_ as s,c as l,o as n,ah as t,j as a,a as e}from"./chunks/framework.BJ6Xb1OP.js";const b=JSON.parse('{"title":"Files","description":"DeekeScript - Files","frontmatter":{"title":"Files","description":"DeekeScript - Files"},"headers":[],"relativePath":"base/files/files.md","filePath":"base/files/files.md"}'),p={name:"base/files/files.md"};function h(o,i,r,d,c,k){return n(),l("div",null,i[0]||(i[0]=[t("",6),a("blockquote",null,[a("p",null,"path {Path} 路径"),a("p",{boolean:""},"返回")],-1),t("",3),a("blockquote",null,[a("p",null,"path {Path} 路径"),a("p",{boolean:""},"返回")],-1),a("p",null,"会尝试创建一个新文件，如果文件已经存在，会抛出FileAlreadyExistsException异常",-1),a("h2",{id:"createdirectory-path",tabindex:"-1"},[e("createDirectory(path) "),a("a",{class:"header-anchor",href:"#createdirectory-path","aria-label":"Permalink to “createDirectory(path)”"},"​")],-1),a("blockquote",null,[a("p",null,"path {Path} 路径"),a("p",{boolean:""},"返回")],-1),a("p",null,"会创建一个单独的目录。如果目录的父目录不存在，会抛出 NoSuchFileException，并且如果目录已经存在，它会抛出 FileAlreadyExistsException。",-1),a("h2",{id:"createdirectories-path",tabindex:"-1"},[e("createDirectories(path) "),a("a",{class:"header-anchor",href:"#createdirectories-path","aria-label":"Permalink to “createDirectories(path)”"},"​")],-1),a("blockquote",null,[a("p",null,"path {Path} 路径"),a("p",{boolean:""},"返回")],-1),a("p",null,"会确保目标路径的所有父目录存在。如果父目录不存在，它们会一并创建，而不会抛出异常。 如果目录已经存在，它不会抛出异常。",-1),a("h2",{id:"exists-path",tabindex:"-1"},[e("exists(path) "),a("a",{class:"header-anchor",href:"#exists-path","aria-label":"Permalink to “exists(path)”"},"​")],-1),a("blockquote",null,[a("p",null,"path {Path} 路径"),a("p",{boolean:""},"返回")],-1),a("p",null,"返回在路径path处的文件是否存在。",-1),a("h2",{id:"readalllines-path-encoding-utf-8",tabindex:"-1"},[e('readAllLines(path[, encoding = "utf-8"]) '),a("a",{class:"header-anchor",href:"#readalllines-path-encoding-utf-8","aria-label":'Permalink to “readAllLines(path[, encoding = "utf-8"])”'},"​")],-1),a("blockquote",null,[a("p",null,"path {Path} 路径"),a("p",null,"encoding {string} 字符编码，可选，默认为utf-8"),a("p",{string:""},"返回")],-1),a("p",null,"读取文本文件path的所有行并返回。如果文件不存在，则抛出异常；文件特别大的情况下，不推荐使用这种方式读取文件",-1),a("h2",{id:"readbytes-path",tabindex:"-1"},[e("readBytes(path) "),a("a",{class:"header-anchor",href:"#readbytes-path","aria-label":"Permalink to “readBytes(path)”"},"​")],-1),a("blockquote",null,[a("p",null,"path {string} 路径"),a("p",{"byte[]":""},"返回")],-1),t("",9),a("blockquote",null,[a("p",null,"fromPath {Path} 要复制的原文件路径"),a("p",null,"toPath {Path} 复制到的文件路径"),a("p",{boolean:""},"返回")],-1),t("",3),a("blockquote",null,[a("p",null,"fromPath {Path} 要移动的原文件路径"),a("p",null,"toPath {Path} 移动到的文件路径"),a("p",{boolean:""},"返回")],-1),a("p",null,"移动文件，返回是否移动成功",-1),a("h2",{id:"delete-path",tabindex:"-1"},[e("delete(path) "),a("a",{class:"header-anchor",href:"#delete-path","aria-label":"Permalink to “delete(path)”"},"​")],-1),a("blockquote",null,[a("p",null,"path {Path} 路径"),a("p",{boolean:""},"返回")],-1),a("p",null,"删除文件；文件不存在，它会抛出异常。",-1),a("h2",{id:"deleteifexists-path",tabindex:"-1"},[e("deleteIfExists(path) "),a("a",{class:"header-anchor",href:"#deleteifexists-path","aria-label":"Permalink to “deleteIfExists(path)”"},"​")],-1),a("blockquote",null,[a("p",null,"path {string} 路径"),a("p",null,"path {string} 路径"),a("p",{boolean:""},"返回")],-1),a("p",null,"删除文件，如果文件存在",-1),a("h2",{id:"list-path",tabindex:"-1"},[e("list(path) "),a("a",{class:"header-anchor",href:"#list-path","aria-label":"Permalink to “list(path)”"},"​")],-1),a("blockquote",null,[a("p",null,"path {Path} 路径")],-1),a("p",null,"返回path下面的所有文件和文件夹。",-1)]))}const f=s(p,[["render",h]]);export{b as __pageData,f as default};
