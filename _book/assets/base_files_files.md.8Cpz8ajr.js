import{_ as i,c as a,o as n,ah as t}from"./chunks/framework.Dgl5HHys.js";const E=JSON.parse('{"title":"Files","description":"DeekeScript - Files","frontmatter":{"title":"Files","description":"DeekeScript - Files"},"headers":[],"relativePath":"base/files/files.md","filePath":"base/files/files.md"}'),e={name:"base/files/files.md"};function l(p,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="files" tabindex="-1">Files <a class="header-anchor" href="#files" aria-label="Permalink to “Files”">​</a></h1><blockquote><p>这里直接使用Java内置的java.nio.file.Files对象</p></blockquote><p>下面提供了Files模块一些常见的文件处理，包括文件读写、移动、复制、删掉等。</p><blockquote><p>注：可以使用for循环打印出Files的相关方法：</p></blockquote><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Files;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Files){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="isdirectory-path" tabindex="-1">isDirectory(path) <a class="header-anchor" href="#isdirectory-path" aria-label="Permalink to “isDirectory(path)”">​</a></h2><p><strong>参数：</strong> <code>path {Path}</code> 路径</p><p><strong>返回：</strong> <code>{boolean}</code></p><p>返回路径path是否是文件夹。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Files;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Paths </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Paths;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sdcard/文件夹/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="createfile-path" tabindex="-1">createFile(path) <a class="header-anchor" href="#createfile-path" aria-label="Permalink to “createFile(path)”">​</a></h2><p><strong>参数：</strong> <code>path {Path}</code> 路径</p><p><strong>返回：</strong> <code>{boolean}</code></p><p>会尝试创建一个新文件，如果文件已经存在，会抛出FileAlreadyExistsException异常</p><h2 id="createdirectory-path" tabindex="-1">createDirectory(path) <a class="header-anchor" href="#createdirectory-path" aria-label="Permalink to “createDirectory(path)”">​</a></h2><p><strong>参数：</strong> <code>path {Path}</code> 路径</p><p><strong>返回：</strong> <code>{boolean}</code></p><p>会创建一个单独的目录。如果目录的父目录不存在，会抛出 NoSuchFileException，并且如果目录已经存在，它会抛出 FileAlreadyExistsException。</p><h2 id="createdirectories-path" tabindex="-1">createDirectories(path) <a class="header-anchor" href="#createdirectories-path" aria-label="Permalink to “createDirectories(path)”">​</a></h2><p><strong>参数：</strong> <code>path {Path}</code> 路径</p><p><strong>返回：</strong> <code>{boolean}</code></p><p>会确保目标路径的所有父目录存在。如果父目录不存在，它们会一并创建，而不会抛出异常。 如果目录已经存在，它不会抛出异常。</p><h2 id="exists-path" tabindex="-1">exists(path) <a class="header-anchor" href="#exists-path" aria-label="Permalink to “exists(path)”">​</a></h2><p><strong>参数：</strong> <code>path {Path}</code> 路径</p><p><strong>返回：</strong> <code>{boolean}</code></p><p>返回在路径path处的文件是否存在。</p><h2 id="readalllines-path-encoding-utf-8" tabindex="-1">readAllLines(path[, encoding = &quot;utf-8&quot;]) <a class="header-anchor" href="#readalllines-path-encoding-utf-8" aria-label="Permalink to “readAllLines(path[, encoding = &quot;utf-8&quot;])”">​</a></h2><p><strong>参数：</strong></p><ul><li><code>path {Path}</code> 路径</li><li><code>encoding {string}</code> 字符编码，可选，默认为utf-8</li></ul><p><strong>返回：</strong> <code>{string}</code></p><p>读取文本文件path的所有行并返回。如果文件不存在，则抛出异常；文件特别大的情况下，不推荐使用这种方式读取文件</p><h2 id="readbytes-path" tabindex="-1">readBytes(path) <a class="header-anchor" href="#readbytes-path" aria-label="Permalink to “readBytes(path)”">​</a></h2><p><strong>参数：</strong> <code>path {string}</code> 路径</p><p><strong>返回：</strong> <code>{byte[]}</code></p><p>读取文件path的所有内容并返回一个字节数组。如果文件不存在，则抛出异常。</p><h2 id="write-path-text-encoding-utf-8-openoption-options" tabindex="-1">write(path, text[, encoding = &quot;utf-8&quot;][, OpenOption... options]) <a class="header-anchor" href="#write-path-text-encoding-utf-8-openoption-options" aria-label="Permalink to “write(path, text[, encoding = &quot;utf-8&quot;][, OpenOption... options])”">​</a></h2><p><strong>参数：</strong></p><ul><li><code>path {Path}</code> 路径</li><li><code>text {string}</code> 要写入的文本内容</li><li><code>encoding {string}</code> 字符编码</li><li><code>options {java.nio.file.StandardOpenOption.CREATE|java.nio.file.StandardOpenOption.APPEND}</code> 可选</li></ul><p>把text写入到文件path中。如果文件存在则覆盖，不存在则创建。如果需要追加，则options可以设置为java.nio.file.StandardOpenOption.APPEND</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Files;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Paths </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Paths;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sdcard/文件夹/2.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DeekeScript&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, java.nio.file.StandardOpenOption.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">APPEND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//返回false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="write-path-bytes-openoption-options" tabindex="-1">write(path, bytes[, OpenOption... options]) <a class="header-anchor" href="#write-path-bytes-openoption-options" aria-label="Permalink to “write(path, bytes[, OpenOption... options])”">​</a></h2><p><strong>参数：</strong></p><ul><li><code>path {Path}</code> 路径</li><li><code>bytes {byte[]}</code> 要写入的字节数组</li><li><code>options {java.nio.file.StandardOpenOption.CREATE|java.nio.file.StandardOpenOption.APPEND}</code> 可选</li></ul><p>把bytes写入到文件path中。如果文件存在则覆盖，不存在则创建。如果需要追加，则options可以设置为java.nio.file.StandardOpenOption.APPEND</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Files;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Paths </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Paths;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">68</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">101</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">101</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">107</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">101</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">83</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">99</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">114</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">105</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">112</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">116</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;DeekeScript&quot; 的字节数组</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sdcard/文件夹/3.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), bytes);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="copy-source-target-copyoption-options" tabindex="-1">copy(source, target[, CopyOption... options]) <a class="header-anchor" href="#copy-source-target-copyoption-options" aria-label="Permalink to “copy(source, target[, CopyOption... options])”">​</a></h2><p><strong>参数：</strong></p><ul><li><code>source {Path}</code> 源文件路径</li><li><code>target {Path}</code> 目标文件路径</li><li><code>options {java.nio.file.StandardCopyOption.REPLACE_EXISTING}</code> 可选</li></ul><p>复制文件。如果目标文件已存在，可以使用StandardCopyOption.REPLACE_EXISTING选项来覆盖</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Files;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Paths </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Paths;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sdcard/文件夹/1.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sdcard/文件夹/1_copy.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    java.nio.file.StandardCopyOption.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">REPLACE_EXISTING</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="move-source-target-copyoption-options" tabindex="-1">move(source, target[, CopyOption... options]) <a class="header-anchor" href="#move-source-target-copyoption-options" aria-label="Permalink to “move(source, target[, CopyOption... options])”">​</a></h2><p><strong>参数：</strong></p><ul><li><code>source {Path}</code> 源文件路径</li><li><code>target {Path}</code> 目标文件路径</li><li><code>options {java.nio.file.StandardCopyOption.REPLACE_EXISTING}</code> 可选</li></ul><p>移动文件。如果目标文件已存在，可以使用StandardCopyOption.REPLACE_EXISTING选项来覆盖</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Files;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Paths </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Paths;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">move</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sdcard/文件夹/1.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sdcard/文件夹/1_moved.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    java.nio.file.StandardCopyOption.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">REPLACE_EXISTING</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="delete-path" tabindex="-1">delete(path) <a class="header-anchor" href="#delete-path" aria-label="Permalink to “delete(path)”">​</a></h2><p><strong>参数：</strong> <code>path {Path}</code> 路径</p><p><strong>返回：</strong> <code>{boolean}</code></p><p>删除文件或目录。如果文件不存在，会抛出NoSuchFileException异常</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Files </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Files;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Paths </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.nio.file.Paths;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Files.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Paths.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/sdcard/文件夹/1.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,60)]))}const c=i(e,[["render",l]]);export{E as __pageData,c as default};
