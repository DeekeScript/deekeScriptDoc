import{_ as s,l as e,n as i,q as o}from"./chunks/theme.CCHGrgzN.js";const g=JSON.parse('{"title":"控制台 - console","description":"DeekeScript - 控制台 - console","frontmatter":{"title":"控制台 - console","description":"DeekeScript - 控制台 - console"},"headers":[],"relativePath":"base/console/console.md","filePath":"base/console/console.md"}'),r={name:"base/console/console.md"};function t(l,a,n,d,h,c){return i(),e("div",null,a[0]||(a[0]=[o('<h1 id="控制台-console" tabindex="-1">控制台 - console <a class="header-anchor" href="#控制台-console" aria-label="Permalink to “控制台 - console”">​</a></h1><p>控制台模块提供了一个和Web浏览器中相似的用于调试的控制台。用于输出一些调试信息、中间结果等。 console模块中的一些函数也可以直接作为全局函数使用，例如log, info等。</p><blockquote><p>如果你不仅仅需要打印数据到控制台，还需要记录日志到文件，请使用 <strong><a href="./../log/log.html">日志-Log</a></strong> 相关的方法</p></blockquote><blockquote><p>注意：console是DeekeScript中唯一一个首字母小写的对象（为了适应用户习惯）</p></blockquote><h2 id="log-data-args" tabindex="-1">log([data][, ...args]) <a class="header-anchor" href="#log-data-args" aria-label="Permalink to “log([data][, ...args])”">​</a></h2><p>打印到控制台，并带上换行符。 可以传入多个参数，第一个参数作为主要信息，其他参数作为类似于 printf(3) 中的代替值（参数都会传给 util.format()）。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;输出的内容&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">324</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;张三&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="info-data-args" tabindex="-1">info([data][, ...args]) <a class="header-anchor" href="#info-data-args" aria-label="Permalink to “info([data][, ...args])”">​</a></h2><p>与console.log类似，但输出结果以绿色字体显示。输出优先级高于log, 用于输出重要信息。</p><h2 id="debug-data-args" tabindex="-1">debug([data][, ...args]) <a class="header-anchor" href="#debug-data-args" aria-label="Permalink to “debug([data][, ...args])”">​</a></h2><p>与console.log类似，但输出结果以绿色字体显示。输出优先级高于log, 用于输出重要信息。</p><h2 id="warn-data-args" tabindex="-1">warn([data][, ...args]) <a class="header-anchor" href="#warn-data-args" aria-label="Permalink to “warn([data][, ...args])”">​</a></h2><p>与console.log类似，但输出结果以蓝色字体显示。输出优先级高于info, 用于输出警告信息。</p><h2 id="error-data-args" tabindex="-1">error([data][, ...args]) <a class="header-anchor" href="#error-data-args" aria-label="Permalink to “error([data][, ...args])”">​</a></h2><p>与console.log类似，但输出结果以红色字体显示。输出优先级高于warn, 用于输出错误信息。</p>',15)]))}const k=s(r,[["render",t]]);export{g as __pageData,k as default};
