import{_ as n,c as r,o as t,j as e,ah as l,a}from"./chunks/framework.BJ6Xb1OP.js";const b=JSON.parse('{"title":"设备 - Device","description":"DeekeScript - 设备 - Device","frontmatter":{"title":"设备 - Device","description":"DeekeScript - 设备 - Device"},"headers":[],"relativePath":"base/device/device.md","filePath":"base/device/device.md"}'),s={name:"base/device/device.md"};function o(d,i,c,h,u,p){return t(),r("div",null,i[0]||(i[0]=[e("h1",{id:"设备-device",tabindex:"-1"},[a("设备 - Device "),e("a",{class:"header-anchor",href:"#设备-device","aria-label":"Permalink to “设备 - Device”"},"​")],-1),e("p",null,"Device对象，提供一些设备相关的方法。",-1),e("h2",{id:"keepscreenon-seconds",tabindex:"-1"},[a("keepScreenOn(seconds) "),e("a",{class:"header-anchor",href:"#keepscreenon-seconds","aria-label":"Permalink to “keepScreenOn(seconds)”"},"​")],-1),e("blockquote",null,[e("p",{void:""},"seconds {number} 屏幕常量秒数 返回")],-1),l('<p>屏幕常量，如果seconds为0，则亮屏10分钟，否则亮屏seconds秒。seconds最大值可能在不同设备上有一定限制。 保证屏幕常量，一般在操作（操作过程中，屏幕一般不会息屏）完相关步骤后，回到我们的App应用（在我们自己的应用上，可以保证长时间不息屏），即可保证不会息屏</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Device.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keepScreenOn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//常量10分钟</span></span></code></pre></div><h2 id="closescreenlight" tabindex="-1">closeScreenLight() <a class="header-anchor" href="#closescreenlight" aria-label="Permalink to “closeScreenLight()”">​</a></h2>',3),e("blockquote",null,[e("p",{void:""},"返回")],-1),l('<p>常量关闭</p><h2 id="width" tabindex="-1">width() <a class="header-anchor" href="#width" aria-label="Permalink to “width()”">​</a></h2><blockquote><p>返回 {number} 返回宽度 单位为px</p></blockquote><p>获取屏幕真实的宽度（像素值）；手机旋转方向后，依然会返回真实的宽度</p><h2 id="height" tabindex="-1">height() <a class="header-anchor" href="#height" aria-label="Permalink to “height()”">​</a></h2><blockquote><p>返回 {number} 返回宽度 单位为px</p></blockquote><p>获取屏幕真实的高度（像素值）；手机旋转方向后，依然会返回真实的高度</p><h2 id="sdkint" tabindex="-1">sdkInt() <a class="header-anchor" href="#sdkint" aria-label="Permalink to “sdkInt()”">​</a></h2>',8),e("blockquote",null,[e("p",{number:""},"返回")],-1),e("p",null,"返回SDK的版本号",-1),e("h2",{id:"device",tabindex:"-1"},[a("device() "),e("a",{class:"header-anchor",href:"#device","aria-label":"Permalink to “device()”"},"​")],-1),e("blockquote",null,[e("p",{string:""},"返回")],-1),e("blockquote",null,[e("p",null,"请注意，这个返回值并不是设备的市场名称（如“华为荣耀V30”）、品牌名（如“华为”）或型号名（如“V30”）。它更偏向于一个内部或技术名称，用于在Android框架和开发中识别不同的设备硬件。")],-1),e("p",null,'获取设备的硬件标识，比如华为荣耀，可能返回"honor_xxx"的字符串',-1),e("h2",{id:"androidversion",tabindex:"-1"},[a("androidVersion() "),e("a",{class:"header-anchor",href:"#androidversion","aria-label":"Permalink to “androidVersion()”"},"​")],-1),e("blockquote",null,[e("p",{string:""},"返回")],-1),e("p",null,"返回Android的版本号",-1),e("h2",{id:"createuuid",tabindex:"-1"},[a("createUuid() "),e("a",{class:"header-anchor",href:"#createuuid","aria-label":"Permalink to “createUuid()”"},"​")],-1),e("blockquote",null,[e("p",{string:""},"返回")],-1),e("blockquote",null,[e("p",null,"由于Android日益严格的权限管控，导致设备的唯一标识不太方便获取，本系统提供了一个uuid生成方案，来解决设备识别问题；建议在开发者在用户激活设备之后，使用此方法创建一个uuid（创建前，请使用getUuid检查是否存在）；后续将这个唯一标识和激活码绑定；")],-1),e("blockquote",null,[e("p",null,"注意：App卸载后、设备恢复出厂等操作，将会让生成的uuid丢失")],-1),e("p",null,"设置设备的随机的uuid",-1),e("h2",{id:"getuuid",tabindex:"-1"},[a("getUuid() "),e("a",{class:"header-anchor",href:"#getuuid","aria-label":"Permalink to “getUuid()”"},"​")],-1),e("blockquote",null,[e("p",{string:""},"返回")],-1),e("p",null,"获取设备的随机的uuid",-1),e("h2",{id:"gettoken",tabindex:"-1"},[a("getToken() "),e("a",{class:"header-anchor",href:"#gettoken","aria-label":"Permalink to “getToken()”"},"​")],-1),e("blockquote",null,[e("p",{string:""},"返回")],-1),e("p",null,"获取设备激活码（用户激活后，才有次值）",-1),e("h2",{id:"getattr-key",tabindex:"-1"},[a("getAttr(key) "),e("a",{class:"header-anchor",href:"#getattr-key","aria-label":"Permalink to “getAttr(key)”"},"​")],-1),e("blockquote",null,[e("p",{string:""},"key"),e("p",{string:""},"返回")],-1),e("p",null,"获取设备其他数据，也可以使用getAttr('token')代替getToken方法",-1),e("h2",{id:"isscreenon",tabindex:"-1"},[a("isScreenOn() "),e("a",{class:"header-anchor",href:"#isscreenon","aria-label":"Permalink to “isScreenOn()”"},"​")],-1),e("blockquote",null,[e("p",{boolean:""},"返回")],-1),e("p",null,"获取屏幕是否亮屏",-1),e("h2",{id:"brand",tabindex:"-1"},[a("brand() "),e("a",{class:"header-anchor",href:"#brand","aria-label":"Permalink to “brand()”"},"​")],-1),e("blockquote",null,[e("p",{string:""},"返回")],-1),e("p",null,'获取设备的品牌信息；对于华为（Huawei）的设备，它会返回 "huawei"。',-1),e("h2",{id:"os",tabindex:"-1"},[a("os() "),e("a",{class:"header-anchor",href:"#os","aria-label":"Permalink to “os()”"},"​")],-1),e("blockquote",null,[e("p",{string:""},"返回")],-1),e("p",null,'获取设备操作系统信息；对于大多数标准的 Android 设备，Build.VERSION.BASE_OS 通常返回 "android"。然而，在某些设备或定制 Android 版本中，制造商可能会为其定制的基础操作系统设置不同的名称或标识符。',-1),e("h2",{id:"model",tabindex:"-1"},[a("model() "),e("a",{class:"header-anchor",href:"#model","aria-label":"Permalink to “model()”"},"​")],-1),e("blockquote",null,[e("p",{string:""},"返回")],-1),e("p",null,'获取设备的model信息；如：荣耀特定设备的型号名称，如 "Honor V30" 或类似的字符串',-1),e("h2",{id:"codename",tabindex:"-1"},[a("codename() "),e("a",{class:"header-anchor",href:"#codename","aria-label":"Permalink to “codename()”"},"​")],-1),e("blockquote",null,[e("p",{string:""},"返回")],-1),e("p",null,'获取设备的codename信息；例如 "REL" 表示正式发布的版本',-1)]))}const g=n(s,[["render",o]]);export{b as __pageData,g as default};
